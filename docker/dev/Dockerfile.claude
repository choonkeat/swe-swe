# Multi-stage build for swe-swe with claude CLI
FROM golang:1.23-alpine AS builder
COPY docker/ca-certificates/*.* /usr/local/share/ca-certificates/

# Install build dependencies
RUN update-ca-certificates && apk add --no-cache make git

# Install elm
RUN wget -O elm.gz https://github.com/elm/compiler/releases/download/0.19.1/binary-for-linux-64-bit.gz && \
    gunzip elm.gz && \
    chmod +x elm && \
    mv elm /usr/local/bin/

WORKDIR /build

# Copy go mod files first for better caching
COPY go.mod go.sum ./
RUN go mod download

# Copy elm package file
COPY elm/elm.json elm/elm.json
RUN cd elm && elm make --docs=/tmp/docs.json || true

# Copy source code
COPY . .

# Build the binary
RUN make build

# Final stage - use alpine for claude CLI installation
FROM alpine:3.19

# Copy custom CA certificates early
COPY docker/ca-certificates/*.* /usr/local/share/ca-certificates/

# Fix SSL issues by temporarily using HTTP for all packages
RUN sed -i 's/https/http/g' /etc/apk/repositories && \
    apk add --no-cache ca-certificates bash git nodejs npm && \
    update-ca-certificates && \
    sed -i 's/http/https/g' /etc/apk/repositories

# Install Claude CLI
RUN npm install -g @anthropic-ai/claude-code

# Copy the swe-swe binary
COPY --from=builder /build/bin/swe-swe /usr/local/bin/swe-swe

# Create workspace directory
RUN mkdir -p /workspace

WORKDIR /workspace

# Default command
ENTRYPOINT ["/usr/local/bin/swe-swe"]
